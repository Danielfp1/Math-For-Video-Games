<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERxYP/B8z5tf1gnvfmAAAA
        AElFTkSuQmCC
</value>
  </data>
</root>